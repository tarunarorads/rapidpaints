{%- liquid
  if request.design_mode or search.terms == "submenu" or section.index == null
    assign lazy_mn = false
  else
    assign lazy_mn = section.settings.lazy_mn
  endif

  assign li_class = ""
  assign mega_position = ''
  if block.settings.title != blank
    assign map_title_lv1 = section.settings.main_menu.links | map: 'title'
    for title in map_title_lv1
      assign title_trim = title | split: '['
      if title_trim[0] == block.settings.title
        assign link = section.settings.main_menu.links | where: 'title', title | first
        assign index = section.settings.main_menu.links | find_index: 'title', title
        break
      endif
    endfor
    assign arr_title = link.title | split: '['
    assign arr_label = arr_title[1] | split: ','
    assign li_class = "hdt-has-children"
    assign mega_width = block.settings.mega_width
    assign mega_custom_width = block.settings.mega_custom_width
    assign mega_position = block.settings.mega_position | default: 'default'
  else
    break
  endif
-%}
<li class="hdt-menu-item hdt-flex hdt-justify-center hdt-flex-col {{ li_class }}" data-index="{{ index | plus: 1 }}" {{ block.shopify_attributes }} style="order: {{ index | plus: 1 }};">
  <hdt-header-menu class="hdt-contents" opened-able-click event="{{ section.settings.open_event }}" position="{{ mega_position }}" {{ block.shopify_attributes }}>
    <details {% if block.settings.mega_presets == "mega_dropdown" %} position="{{ mega_position }}" {% elsif mega_width == "full" %} not-need-calc {% elsif mega_width == "custom" %} style="--mega-width: {{ mega_custom_width }}px;" position="{{ mega_position }}" {% endif %}>
      <summary data-url="{{ link.url }}" class="hdt-menu-link hdt-flex hdt-align-center hdt-justify-between hdt-relative hdt-text-{{ section.settings.menu_size }} hdt-font-{{ section.settings.menu_weight }}{% if link.current and section.settings.active_link %} hdt-menu-link--active{% endif %}">
        <span class="hdt-menu-link-text hdt-block{% if arr_label.size > 0 %} hdt-relative hdt-title_size-{{ arr_title[0].size | at_most: 20 }} hdt-has-{{ arr_label.size | at_most: 2 }}label{% endif %}">
          <span class="hdt-block hdt-line-clamp">{{ arr_title[0] }}</span>
          {%- if arr_label.size > 0 -%}
            <span class="hdt_label_menu hdt-absolute hdt-inline-flex hdt-align-center hdt-justify-center hdt-text-xs">
              {%- for label in arr_label limit: 2 -%}
                {%- assign label_text = label | remove: 'label_' | remove: ','  | remove: ']' | strip -%}
                <span class="hdt_label_{{ label_text | handleize }} hdt-flex hdt-align-center hdt-justify-center">{{ label_text }}</span>
              {%- endfor -%}
            </span>
          {%- endif -%}
        </span>
        
        {%- if li_class != "" and section.settings.dropdown_arrow -%}
          <svg class="hdt-menu-item-arrow" xmlns="http://www.w3.org/2000/svg" width="10" height="7" viewBox="0 0 10 7" fill="none"><path d="M10 1.24243L5 6.24243L-2.18557e-07 1.24243L0.8875 0.354932L5 4.46743L9.1125 0.354931L10 1.24243Z" fill="currentColor"/></svg>
        {%- endif -%}
      </summary>
      {%- if lazy_mn and block.settings.mega_presets != "mega_dropdown" -%}
        <hdt-lazy-submenu id="sub-{{ block.id }}" data-section="{{ section.id }}" class="hdt-sub-menu hdt-mega-menu hdt-absolute" color-scheme="{{ block.settings.mega_menu_colors }}"> </hdt-lazy-submenu>
      {%- else -%}
        {%- render 'mega_menu_theme_blocks', link: link -%}
      {%- endif -%}
    </details>
  </hdt-header-menu>
  {%- if block.settings.mega_presets == "html" and block.settings.page.metafields.home.menu.value != blank -%}
    {%- if block.settings.page.metafields.home.menu.value.count > 10 -%}
      {%- assign demos = block.settings.page.metafields.home.menu.value -%}
      {%- paginate demos by 100 -%}
      <hdt-modal class="hdt-modal hdt-modal-demos hdt-contents hdt-text-center" color-scheme="{{ block.settings.mega_menu_colors }}">
        <dialog id="modal-{{ block.id }}" class="hdt-dialog hdt-dialog-modal" scroll-lock>
          <div class="hdt-dialog-modal__header hdt-text-center">
            <h5 class="hdt-demos-title hdt-font-medium hdt-text-center">Ultimate Shopify Theme</h5>
            <button ref="closeButton" class="hdt-s-text hdt-dialog-btn__close" aria-controls="modal-{{ block.id }}" aria-label="{{ 'accessibility.close' | t | escape }}">{%- render 'icon' with 'close' -%}</button>
          </div>
          <div class="hdt-dialog-modal__inner hdt-current-scrollbar">
            <div class="hdt-row-grid hdt-row-grid--modify hdt-grid-cols-1 lg:hdt-grid-cols-5 hdt-justify-center hdt-row-demos">
              {%- for item in block.settings.page.metafields.home.menu.value -%}
                {% assign image = item.image %}
                <div class="hdt-col hdt-demo-item hdt-text-center">
                  <a href="{{ item.url.value.url }}" title="{{ item.name }}">
                    {%- if image != blank -%}
                      <div class="hdt-demo-image hdt-relative hdt-block">
                        <img src="{{ image | image_url: width: 300 }}" width="600" height="657" srcset="{{ image | image_url: width: 300 }} 1x, {{ image | image_url: width: 600 }} 2x" sizes="300px" loading='lazy'>
                        {% if item.label.value.size > 0 %}
                          <div class="hdt-demo-label hdt-flex hdt-absolute">
                            {%- for label in item.label.value -%}
                              <span class="hdt-demo_{{ label | handle }} hdt-flex hdt-align-center hdt-justify-center hdt-text-xs hdt-font-medium">{{ label | escape }}</span>
                            {%- endfor -%}
                          </div>
                        {% endif %}
                      </div>
                    {%- endif -%}
                    <span class="hdt-demo-name hdt-text-base hdt-font-semibold">{{ item.name }}</span>
                  </a>
                </div>
              {%- endfor -%}
            </div>
          </div>
        </dialog>
      </hdt-modal>
    {%- endpaginate -%}
    {%- endif -%}
  {%- endif -%}
</li>
{% schema %}
  {
    "name": "Mega Block",
    "tag": null,
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Menu item name (level 1) of main menu"
      },
      {
        "type": "color_scheme",
        "id": "mega_menu_colors",
        "label": "t:sections.all.colors.label",
        "visible_if": "{{ block.settings.mega_presets != 'mega_dropdown' }}"
      },
      {
        "type": "radio",
        "id": "mega_width",
        "label": "t:sections.header.blocks.mega_width.label",
        "default": "full",
        "options": [
          {
            "label": "t:sections.header.blocks.mega_width.full",
            "value": "full"
          },
          {
            "label": "t:sections.header.blocks.mega_width.custom",
            "value": "custom"
          }
        ],
        "visible_if": "{{ block.settings.mega_presets != 'mega_dropdown' }}"
      },
      {
        "type": "select",
        "id": "mega_position",
        "label": "t:sections.header.blocks.mega_position.label",
        "default": "bottom",
        "options": [
          {
            "label": "t:sections.header.blocks.mega_position.default",
            "value": "bottom"
          },
          {
            "label": "t:sections.header.blocks.mega_position.center",
            "value": "center_on_screen"
          }
        ],
        "visible_if": "{{ block.settings.mega_width == 'custom' }}"
      },
      {
        "type": "range",
        "id": "mega_custom_width",
        "label": "t:sections.header.blocks.mega_custom_width",
        "min": 600,
        "max": 1600,
        "step": 10,
        "unit": "px",
        "default": 1200,
        "visible_if": "{{ block.settings.mega_width == 'custom' }}"
      },
      {
        "type": "select",
        "id": "mega_presets",
        "label": "Mega Menu Presets",
        "default": "html",
        "options": [
          {
            "label": "HTML",
            "value": "html"
          },
          {
            "label": "Blog",
            "value": "mega_blog"
          },
          {
            "label": "Product",
            "value": "mega_product"
          },
          {
            "label": "Shop",
            "value": "mega_shop"
          },
          {
            "label": "Page",
            "value": "mega_page"
          },
          {
            "label": "Sale",
            "value": "mega_sale"
          },
          {
            "label": "Dropdown",
            "value": "mega_dropdown"
          }
        ]
      },
      {
        "type": "html",
        "id": "html",
        "label": "t:sections.header.blocks.html.name",
        "visible_if": "{{ block.settings.mega_presets == 'html' }}"
      },
      {
        "type": "page",
        "id": "page",
        "label": "t:sections.header.blocks.html.page.label",
        "info": "t:sections.header.blocks.html.page.info"/*,
        "visible_if": "{{ block.settings.mega_presets == 'html' }}" */
      },
      {
        "id": "blog",
        "type": "blog",
        "label": "t:sections.feature-blog.settings.blog",
        "info": "Only visible if mega menu presets is blog."/*,
        "visible_if": "{{ block.settings.mega_presets == 'mega_blog' }}" */
      },
      {
        "type": "product_list",
        "id": "product_list",
        "label": "t:sections.header.blocks.mega_product.product_list",
        "info": "Only visible if mega menu presets is product or sale."/*,
        "visible_if": "{{ block.settings.mega_presets == 'mega_product' or block.settings.mega_presets == 'mega_sale' }}" */
      },
      {
        "type": "collection_list",
        "id": "collection_list",
        "label": "t:sections.header.blocks.mega_shop.collection_list",
        "limit": 4,
        "info": "Only visible if mega menu presets is shop."/*,
        "visible_if": "{{ block.settings.mega_presets == 'mega_shop' }}" */
      },
      {
        "type": "range",
        "id": "limit",
        "min": 1,
        "max": 50,
        "step": 1,
        "label": "t:sections.feature-blog.settings.limit",
        "default": 8,
        "visible_if": "{{ block.settings.mega_presets == 'mega_blog' }}"
      },
      {
        "type": "select",
        "id": "image_ratio",
        "options": [
          {
            "value": "adapt_image",
            "label": "t:sections.all.images.ratio.adapt_image.label"
          },
          {
            "value": "square",
            "label": "t:sections.all.images.ratio.square.label"
          },
          {
            "value": "portrait",
            "label": "t:sections.all.images.ratio.portrait.label"
          },
          {
            "value": "asos",
            "label": "t:sections.all.images.ratio.asos.label"
          },
          {
            "value": "landscape",
            "label": "t:sections.all.images.ratio.landscape.label"
          }
        ],
        "label": "t:sections.all.images.ratio.label",
        "default": "adapt_image",
        "visible_if": "{{ block.settings.mega_presets == 'mega_blog' or block.settings.mega_presets == 'mega_shop' or block.settings.mega_presets == 'mega_product' or block.settings.mega_presets == 'mega_sale' }}"
      },
      {
        "type": "checkbox",
        "id": "image_size",
        "label": "t:sections.all.images.size.cover",
        "default": true,
        "visible_if": "{{ block.settings.mega_presets == 'mega_blog' or block.settings.mega_presets == 'mega_shop' or block.settings.mega_presets == 'mega_product' or block.settings.mega_presets == 'mega_sale' }}"
      },
      {
        "type": "checkbox",
        "id": "navUI",
        "label": "t:blocks.carousel.settings.navigation.use_navigation",
        "default": true,
        "visible_if": "{{ block.settings.mega_presets == 'mega_blog' or block.settings.mega_presets == 'mega_product' or block.settings.mega_presets == 'mega_sale' }}"
      },
      {
        "type": "color_scheme",
        "id": "collection_colors",
        "label": "t:sections.header.blocks.mega_shop.collection_colors",
        "visible_if": "{{ block.settings.mega_presets == 'mega_shop' }}"
      },
      {
        "type": "text",
        "id": "product_list_title",
        "label": "t:sections.header.blocks.product_list_title",
        "default": "BEST SELLER",
        "visible_if": "{{ block.settings.mega_presets == 'mega_product' or block.settings.mega_presets == 'mega_sale' }}"
      },
      {
        "type": "link_list",
        "id": "child_menu",
        "label": "Child menu",
        "visible_if": "{{ block.settings.mega_presets == 'mega_dropdown' }}"
      }
    ],
    "presets": [
      {
        "name": "Mega Block"
      }
    ]
  }
{% endschema %}